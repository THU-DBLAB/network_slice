# https://www.sdnlab.com/23289.html

# task - custom the topology

# mininet
$ sudo mn --custom network_slice/experiment_3/topo_3.py --topo mytopo --mac --switch ovs,protocols=OpenFlow13 --controller remote

# ryu
$ ryu-manager --verbose ryu/ryu/app/simple_switch_13.py

# open Xterm for h1 h2 h3 h4 in mininet 
$ xterm h1 h2 h3 h4

# in h4
$ iperf -s
# in h1 h2 h3
$ iperf -c 10.0.0.4

$ sudo ovs-vsctl -- set Port s1-eth4 qos=@newqos -- \
--id=@newqos create QoS type=linux-htb queues:0=@q0 queues:1=@q1 queues:2=@q2 -- \
--id=@q0 create Queue other-config:max-rate=9000000 -- \
--id=@q1 create Queue other-config:max-rate=6000000 -- \
--id=@q2 create Queue other-config:max-rate=3000000

$ sudo ovs-vsctl list port s1-eth4
$ sudo ovs-vsctl list qos {uuid}
$ sudo ovs-vsctl list queue {uuid}

$ sudo ovs-ofctl -O openflow13 dump-flows s1

$ sudo ovs-ofctl -O OpenFlow13 mod-flows s1 "table=0, priority=1, in_port="s1-eth1", dl_src=00.00.00.00.00.01, dl_dst=00.00.00.00.00.04, actions=set_queue:0,output:"s1-eth4""
$ sudo ovs-ofctl -O OpenFlow13 mod-flows s1 "table=0, priority=1, in_port="s1-eth2", dl_src=00.00.00.00.00.02, dl_dst=00.00.00.00.00.04, actions=set_queue:1,output:"s1-eth4""
$ sudo ovs-ofctl -O OpenFlow13 mod-flows s1 "table=0, priority=1, in_port="s1-eth3", dl_src=00.00.00.00.00.03, dl_dst=00.00.00.00.00.04, actions=set_queue:2,output:"s1-eth4""


# kill all Qos and Queue
$ sudo ovs-vsctl -- --all destroy QoS -- --all destroy Queue